---

# AWS cldr-runner

version: 1

build_arg_defaults:
  EE_BASE_IMAGE: "quay.io/ansible/ansible-runner:stable-2.12-latest"
  EE_BUILDER_IMAGE: "ghcr.io/cloudera-labs/ansible-builder:${BUILD_TAG:-latest}"

dependencies:
  galaxy: galaxy.yml
  python: requirements.txt
  system: bindep.txt

additional_build_steps:
  prepend: |
    ARG BUILD_VER="latest"
    ENV CLDR_BUILD_VER=$BUILD_VER
    ENV PKGMGR_OPTS="--nodocs --setopt install_weak_deps=0"
    COPY . /tmp/src
    RUN mv /tmp/src/bashrc /home/runner/.bashrc && \
        mv /tmp/src/repo/*.repo /etc/yum.repos.d/ && \
        mv /tmp/src/env /tmp/src/inventory /runner && \
        /usr/bin/python3 -m pip install --upgrade pip && \
        dnf install -y terraform unzip --nodocs --setopt install_weak_deps=0 && \
        curl -o /usr/local/bin/aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator && \
        chmod +x /usr/local/bin/aws-iam-authenticator && \
        curl -o /tmp/awscliv2.zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip && \
        unzip /tmp/awscliv2.zip -d /tmp && \
        /tmp/aws/install && \
        rm /tmp/awscliv2.zip && rm -rf /tmp/aws
  append: |
    ENV PATH "$PATH:/home/runner/.local/bin"
    RUN alternatives --set python /usr/bin/python3 && \
        pip cache purge || echo "No Pip cache to purge" && \
        dnf clean all -y && \
        rm -rf /var/cache/yum && \
        rm -rf /var/cache/dnf && \
        rm -rf /tmp/src
